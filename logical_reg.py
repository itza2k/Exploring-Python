# -*- coding: utf-8 -*-
"""logical_reg.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vlFyhZS7fBmX1iYeW5ImoeZONPYjWDkA
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Loading the dataset
data = pd.read_csv('/content/sample_data/exam_scores_admissions.csv')

# Displaying few rows of the csv
print(data.head())

# Scatter plot
plt.figure(figsize=(10, 6))
plt.scatter(data['Exam1'], data['Exam2'], c=data['Admission'], cmap='bwr', alpha=0.75)
plt.xlabel('Exam 1 Score')
plt.ylabel('Exam 2 Score')
plt.title('Exam Scores vs Admission')
plt.colorbar(label='Admission Decision')
plt.show()

# Training and testing sets
X = data[['Exam1', 'Exam2']]
y = data['Admission']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Standardizing the features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Training logistic reg model
model = LogisticRegression()
model.fit(X_train_scaled, y_train)

# Predicting test set results
y_pred = model.predict(X_test_scaled)

# Evaluating model
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f'Accuracy: {accuracy * 100:.2f}%')
print('Confusion Matrix:')
print(conf_matrix)
print('Classification Report:')
print(class_report)