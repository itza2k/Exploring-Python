# -*- coding: utf-8 -*-
"""linear_reg.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DwPOmrG9AJ-FUcIjUhMZzQqJ7vJQUWOi
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Data Collection
url = "https://raw.githubusercontent.com/Baakchsu/LinearRegression/master/weight-height.csv"
df = pd.read_csv(url)

# Data Preprocessing
weights = df['Weight'].values
heights = df['Height'].values

# Calculate Parameters
N = len(weights)  # Number of data points

sum_x = np.sum(weights)  # Sum of all weights
sum_y = np.sum(heights)  # Sum of all heights
sum_xy = np.sum(weights * heights)  # Sum of the product of weights and heights
sum_x2 = np.sum(weights ** 2)  # Sum of the squares of weights

m = (N * sum_xy - sum_x * sum_y) / (N * sum_x2 - sum_x ** 2)  # Slope
b = (sum_y * sum_x2 - sum_x * sum_xy) / (N * sum_x2 - sum_x ** 2)  # Intercept

print(f'Slope (m): {m}')
print(f'Intercept (b): {b}')

# Prediction Function
def predict_height(weight):
    return m * weight + b

# Enter weight to predict height
weight_input = float(input("Enter weight in kg: "))
predicted_height = predict_height(weight_input)
print(f'Predicted Height for weight {weight_input} kg: {predicted_height}')

# Visualization
plt.scatter(weights, heights, color='blue', alpha=0.5)
plt.plot(weights, m * weights + b, color='red', linewidth=2)
plt.xlabel('Weight')
plt.ylabel('Height')
plt.title('Weight vs Height Linear Regression')
plt.show()